[mcu ercf]
canbus_uuid: f079bd60e64b

[temperature_sensor ERCF_MCU]
sensor_type: temperature_mcu
sensor_mcu: ercf


# Carrot Feeder 5mm D-cut shaft
[manual_stepper gear_stepper]
step_pin: ercf:gpio7
dir_pin: !ercf:gpio8
enable_pin: !ercf:gpio6
rotation_distance: 22.6789511    #Bondtech 5mm Drive Gears
gear_ratio: 80:20
microsteps: 16  # Please do not go higher than 16, this can cause 'MCU Timer too close' issues under Klipper
full_steps_per_rotation: 200    #200 for 1.8 degree, 400 for 0.9 degree
velocity: 35
accel: 150
#Right now no pin is used for the endstop, but we need to define one for klipper. So just use a random, not used pin
endstop_pin: ercf:gpio13

[tmc2209 manual_stepper gear_stepper]
# Adapt accordingly to your setup and desires
# The default values are tested with the BOM NEMA14 motor
# Please adapt those values to the motor you are using
# Example : for NEMA17 motors, you'll usually set the stealthchop_threshold to 0
# and use higher current
uart_pin: ercf:gpio9
interpolate: True
run_current: 0.40
hold_current: 0.1
sense_resistor: 0.110
stealthchop_threshold: 500
# diag_pin: ercf:gpio23

# [tmc5160 manual_stepper gear_stepper]
# cs_pin: ercf:gpio9
#spi_software_sclk_pin: ercf:gpio19
#spi_software_mosi_pin: ercf:gpio18
#spi_software_miso_pin: ercf:gpio16
# interpolate: True
# run_current: 0.40
# hold_current: 0.1
# stealthchop_threshold: 500
# diag0_pin: ercf:gpio23



# Carrot Feeder selector
[manual_stepper selector_stepper]
step_pin: ercf:gpio2
dir_pin: ercf:gpio1
enable_pin: !ercf:gpio3
microsteps: 16    # Please do not go higher than 16, this can cause 'MCU Timer too close' issues under Klipper
rotation_distance: 40
full_steps_per_rotation: 200    #200 for 1.8 degree, 400 for 0.9 degree
velocity: 200
accel: 600
# Select the endstop you want depending if you are using sensorless homing for the selector or not
endstop_pin: ercf:gpio20
#endstop_pin: tmc2209_selector_stepper:virtual_endstop
#endstop_pin: tmc5160_selector_stepper:virtual_endstop

[tmc2209 manual_stepper selector_stepper]
uart_pin: ercf:gpio0
run_current: 0.30
interpolate: True
sense_resistor: 0.110
stealthchop_threshold: 500
# Uncomment the lines below if you want to use sensorless homing for the selector
#diag_pin: ^ercf:gpio22      # Set to MCU pin connected to TMC DIAG pin
#driver_SGTHRS: 75  # 255 is most sensitive value, 0 is least sensitive

# [tmc5160 manual_stepper selector_stepper]
# cs_pin: ercf:gpio0
#spi_software_sclk_pin: ercf:gpio19
#spi_software_mosi_pin: ercf:gpio18
#spi_software_miso_pin: ercf:gpio16
# interpolate: True
# run_current: 0.40
# hold_current: 0.1
# stealthchop_threshold: 500
# diag0_pin: ercf:gpio22
# driver_SGT: 75


# Values are for the MG90S servo
[ercf_servo ercf_servo]
pin: ercf:gpio21
maximum_servo_angle: 180
minimum_pulse_width: 0.00085
maximum_pulse_width: 0.00215

## ENCODER -----------------------------------------------------------------------------------------------------------------
## The encoder_resolution is determined by running the ERCF_CALIBRATE_ENCODER. Be sure to read the manual
[ercf_encoder ercf_encoder]
encoder_pin: ^ercf:gpio15			# EASY-BRD: ^ercf:PA6, Flytech ERB: ^ercf:gpio22
encoder_resolution: 1.339226	# Set AFTER 'rotation_distance' is tuned for gear stepper (see manual)
extruder: extruder		# The extruder to track with for runout/clog detection

# These are advanced but settings for Automatic clog detection mode. Make sure you understand or ask questions on Discord
desired_headroom: 8.0		# The runout headroom that ERCF will attempt to maintain (closest ERCF comes to triggering runout)
average_samples: 4		# The "damping" effect of last measurement. Higher value means clog_length will be reduced more slowly


[duplicate_pin_override]
pins: ercf:gpio15
# Put there the pin used by the encoder and the filament_motion_sensor
# It has to be the same pin for those 3

# [filament_motion_sensor encoder_sensor]
# switch_pin: ^ercf:gpio15
# pause_on_runout: False
# detection_length: 10.0
# extruder: extruder
# # runout_gcode: _ERCF_ENCODER_MOTION_ISSUE

# [filament_switch_sensor toolhead_sensor]
# pause_on_runout: False
# switch_pin: ^ercf:gpio14