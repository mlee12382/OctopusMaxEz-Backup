[server]
host: 0.0.0.0
port: 7125
klippy_uds_address: /home/pi/printer_data/comms/klippy.sock

[authorization]
trusted_clients:
    10.0.0.0/8
    127.0.0.0/8
    169.254.0.0/16
    172.16.0.0/12
    192.168.0.0/16
    FE80::/10
    ::1/128
cors_domains:
    http://*.lan
    http://*.local
    https://my.mainsail.xyz
    http://my.mainsail.xyz
    https://app.fluidd.xyz
    http://app.fluidd.xyz

[octoprint_compat]

[history]

[update_manager]
channel: dev
refresh_interval: 168

[update_manager mainsail]
type: web
channel: stable
repo: mainsail-crew/mainsail
path: ~/mainsail

[update_manager fluidd]
type: web
channel: stable
repo: fluidd-core/fluidd
path: ~/fluidd

[include moonraker-obico-update.cfg]

[update_manager CanBoot]
type: git_repo
path: ~/CanBoot
origin: https://github.com/Arksine/CanBoot.git
is_system_service: False

[update_manager timelapse]
type: git_repo
primary_branch: main
path: ~/moonraker-timelapse
origin: https://github.com/mainsail-crew/moonraker-timelapse.git
managed_services: klipper moonraker

[power Printer]
type: gpio
pin: gpiochip0/gpio17
off_when_shutdown: True
on_when_job_queued: True
locked_while_printing: True
restart_klipper_when_powered: true
initial_state: off

[power PSU]
type: gpio
pin: gpiochip0/gpio20
off_when_shutdown: False
on_when_job_queued: True
locked_while_printing: True
restart_klipper_when_powered: false
initial_state: off

[power Lightbar]
type: gpio
pin: gpiochip0/gpio16
off_when_shutdown: False
on_when_job_queued: True
restart_klipper_when_powered: false
initial_state: off

# Configure the Job Queue to start a queued print when Klipper reports as
# ready.
[job_queue]
load_on_startup: True
# Configure the job_transition_delay and job_transition_gcode options
# if desired.  Note that they do no apply to prints loaded on startup.


[timelapse]
#   Following basic configuration is default to most images and don't need
#   to be changed in most scenarios. Only uncomment and change it if your
#   Image differ from standart installations. In most common scenarios 
#   a User only need [timelapse] in there configuration.
output_path: ~/printer_data/timelapse/
#   Directory where the generated video will be saved
frame_path: /tmp/timelapse/
#   Directory where the temporary frames are saved
ffmpeg_binary_path: /usr/bin/ffmpeg
##   Directory where ffmpeg is installed

# Crowsnest update_manager entry
[update_manager crowsnest]
type: git_repo
path: ~/crowsnest
origin: https://github.com/mainsail-crew/crowsnest.git
managed_services: crowsnest


[update_manager KlipperScreen]
type: git_repo
path: /home/pi/KlipperScreen
origin: https://github.com/jordanruthe/KlipperScreen.git
env: /home/pi/.KlipperScreen-env/bin/python
requirements: scripts/KlipperScreen-requirements.txt
install_script: scripts/KlipperScreen-install.sh

# [update_manager klipper-macros]
# type: git_repo
# origin: https://github.com/jschuh/klipper-macros.git
# path: ~/printer_data/config/klipper-macros
# primary_branch: main
# is_system_service: False
# managed_services: klipper

[update_manager led_effect]
type: git_repo
path: ~/klipper-led_effect
origin: https://github.com/julianschill/klipper-led_effect.git
is_system_service: False

# [update_manager pa_cal]
# type: git_repo
# path: ~/klipper-pa_cal
# origin: https://github.com/ksanislo/klipper-pa_cal.git
# is_system_service: False

